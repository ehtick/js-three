!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("three")):"function"==typeof define&&define.amd?define(["exports","three"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self).google=e.google||{},e.google.maps=e.google.maps||{},e.google.maps.plugins=e.google.maps.plugins||{},e.google.maps.plugins.three={}),e.three)}(this,(function(e,t){"use strict";const n=6371010,o=Math.PI*n;function s(e){e=function(e){return window.google&&google.maps&&e instanceof google.maps.LatLng?e.toJSON():e}(e);return{x:n*t.MathUtils.degToRad(e.lng),y:0-n*Math.log(Math.tan(.5*(.5*Math.PI-t.MathUtils.degToRad(e.lat))))}}function r(e,n=new t.Vector3){const{x:o,y:r}=s(e);return n.set(o,0,-r)}e.EARTH_RADIUS=n,e.ThreeJSOverlayView=class{constructor({anchor:e={lat:0,lng:0,altitude:0},rotation:n=new Float32Array([0,0,0]),scale:o=new Float32Array([1,1,1]),scene:s=new t.Scene,map:r}){this.overlay=new google.maps.WebglOverlayView,this.renderer=null,this.camera=null,this.anchor=e,this.rotation=n,this.scale=o,this.scene=s,this.scene.rotation.x=Math.PI/2,this.overlay.onAdd=this.onAdd.bind(this),this.overlay.onRemove=this.onRemove.bind(this),this.overlay.onContextLost=this.onContextLost.bind(this),this.overlay.onContextRestored=this.onContextRestored.bind(this),this.overlay.onDraw=this.onDraw.bind(this),this.camera=new t.PerspectiveCamera,r&&this.setMap(r)}onAdd(){}onRemove(){}getMap(){return this.overlay.getMap()}requestRedraw(){this.overlay.requestRedraw()}setMap(e){this.overlay.setMap(e)}addListener(e,t){return this.overlay.addListener(e,t)}bindTo(e,t,n,o){this.overlay.bindTo(e,t,n,o)}get(e){return this.overlay.get(e)}notify(e){this.overlay.notify(e)}set(e,t){this.overlay.set(e,t)}setValues(e){this.overlay.setValues(e)}unbind(e){this.overlay.unbind(e)}unbindAll(){this.overlay.unbindAll()}onContextRestored(e){this.renderer=new t.WebGLRenderer(Object.assign({canvas:e.canvas,context:e},e.getContextAttributes())),this.renderer.autoClear=!1,this.renderer.autoClearDepth=!1,this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=t.PCFSoftShadowMap,this.renderer.outputEncoding=t.sRGBEncoding;const{width:n,height:o,clientWidth:s}=e.canvas;this.renderer.setPixelRatio(n/s),this.renderer.setSize(n,o,!1)}onContextLost(){}onDraw(e,t){const{lat:n,lng:o,altitude:s}=this.anchor;this.camera.projectionMatrix.fromArray(t.fromLatLngAltitude({lat:n,lng:o},s,this.rotation,this.scale)),e.disable(e.SCISSOR_TEST),this.requestRedraw(),this.renderer.render(this.scene,this.camera),this.renderer.resetState()}},e.WORLD_SIZE=o,e.latLngToMeters=s,e.latLngToVector3=r,e.latLngToVector3Relative=function(e,n,o=new t.Vector3){const s=r(e),a=r(n);return o.setX((a.x-s.x)*Math.sign(s.x-a.x)),o.setY((a.y-s.y)*Math.sign(s.y-a.y)),o.setZ((a.z-s.z)*Math.sign(s.z-a.z)),o},Object.defineProperty(e,"__esModule",{value:!0})}));

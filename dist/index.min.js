this.google=this.google||{},this.google.maps=this.google.maps||{},this.google.maps.plugins=this.google.maps.plugins||{},this.google.maps.plugins.three=function(e,t){"use strict";const s=6371010,n=Math.PI*s;function o(e){e=function(e){return window.google&&google.maps&&e instanceof google.maps.LatLng?e.toJSON():e}(e);return{x:s*t.MathUtils.degToRad(e.lng),y:0-s*Math.log(Math.tan(.5*(.5*Math.PI-t.MathUtils.degToRad(e.lat))))}}function r(e,s=new t.Vector3){const{x:n,y:r}=o(e);return s.set(n,0,-r)}return e.EARTH_RADIUS=s,e.ThreeJSOverlayView=class{constructor({anchor:e={lat:0,lng:0,altitude:0},rotation:s=new Float32Array([0,0,0]),scale:n=new Float32Array([1,1,1]),scene:o=new t.Scene,map:r}){this.overlay=new google.maps.WebglOverlayView,this.renderer=null,this.camera=null,this.anchor=e,this.rotation=s,this.scale=n,this.scene=o,this.scene.rotation.x=Math.PI/2,this.overlay.onAdd=this.onAdd.bind(this),this.overlay.onRemove=this.onRemove.bind(this),this.overlay.onContextLost=this.onContextLost.bind(this),this.overlay.onContextRestored=this.onContextRestored.bind(this),this.overlay.onDraw=this.onDraw.bind(this),this.camera=new t.PerspectiveCamera,r&&this.setMap(r)}onAdd(){}onRemove(){}getMap(){return this.overlay.getMap()}requestRedraw(){this.overlay.requestRedraw()}setMap(e){this.overlay.setMap(e)}addListener(e,t){return this.overlay.addListener(e,t)}bindTo(e,t,s,n){this.overlay.bindTo(e,t,s,n)}get(e){return this.overlay.get(e)}notify(e){this.overlay.notify(e)}set(e,t){this.overlay.set(e,t)}setValues(e){this.overlay.setValues(e)}unbind(e){this.overlay.unbind(e)}unbindAll(){this.overlay.unbindAll()}onContextRestored(e){this.renderer=new t.WebGLRenderer(Object.assign({canvas:e.canvas,context:e},e.getContextAttributes())),this.renderer.autoClear=!1,this.renderer.autoClearDepth=!1,this.renderer.shadowMap.enabled=!0,this.renderer.shadowMap.type=t.PCFSoftShadowMap,this.renderer.outputEncoding=t.sRGBEncoding;const{width:s,height:n,clientWidth:o}=e.canvas;this.renderer.setPixelRatio(s/o),this.renderer.setSize(s,n,!1)}onContextLost(){}onDraw(e,t){const{lat:s,lng:n,altitude:o}=this.anchor;this.camera.projectionMatrix.fromArray(t.fromLatLngAltitude({lat:s,lng:n},o,this.rotation,this.scale)),e.disable(e.SCISSOR_TEST),this.requestRedraw(),this.renderer.render(this.scene,this.camera),this.renderer.resetState()}},e.WORLD_SIZE=n,e.latLngToMeters=o,e.latLngToVector3=r,e.latLngToVector3Relative=function(e,s,n=new t.Vector3){const o=r(e),a=r(s);return n.setX((a.x-o.x)*Math.sign(o.x-a.x)),n.setY((a.y-o.y)*Math.sign(o.y-a.y)),n.setZ((a.z-o.z)*Math.sign(o.z-a.z)),n},Object.defineProperty(e,"__esModule",{value:!0}),e}({},three);
